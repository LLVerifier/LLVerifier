load ../lib/Iot .
mod SYSTEM is
protecting Iot .
eq init = idle @ < deviceB | ('key' : 'secret') > < userA | ('localTo' : deviceB , 'keys' : ('UIDA')) > < userC | ('localTo' : nils , 'keys' : ('UIDC')) > < cloudA | (deviceB : ('key' : 'secret' , 'owner' : nils) , userA : ('key' : 'UIDA') , userC : ('key' : 'UIDC')) > .

vars .. ... .... ..... ...... ....... : Set .

*** variables
vars N : Nat .
vars DeviceX : Device .
vars KeyA : Qid .
vars UserY : User .
vars UserX : User .
vars SetA : Set .
vars DeviceY : Device .
vars KeyB : Qid .
vars AnyPrincipal : Principal .
*** policy
eq < DeviceX | ('key' : KeyA , ..) > $ UserY 'pressButton' DeviceX 
= < DeviceX | ('key' : KeyA , ..) > $ DeviceX 'sendKey' UserY | (KeyA) .
eq < UserX | ('keys' : SetA , ..) > $ DeviceY 'sendKey' UserX | (KeyB) 
= < UserX | ('keys' : (SetA , KeyB) , ..) > .
eq < DeviceX | ('key' : KeyA , ..) > $ UserY 'callAPI:bind' DeviceX | (KeyB) 
= < DeviceX | ('key' : KeyA , ..) > $ DeviceX 'callAPI:bind' cloudA | (KeyA ; KeyB) .
eq < cloudA | (DeviceX : ('key' : KeyA , 'owner' : nils , ..) , UserY : ('key' : KeyB , ...) , ....) > $ AnyPrincipal 'callAPI:bind' cloudA | (KeyA ; KeyB) 
= < cloudA | (DeviceX : ('key' : KeyA , 'owner' : UserY , ..) , UserY : ('key' : KeyB , ...) , ....) > .
eq < UserX | ('localTo' : nils , ..) > $ UserX 'approaches' DeviceY 
= < UserX | ('localTo' : DeviceY , ..) > .
eq < UserX | ('localTo' : DeviceY , ..) > $ UserX 'leaves' DeviceY 
= < UserX | ('localTo' : nils , ..) > .
endm

mod TRANSITION is
including SYSTEM .
var E : Event .
var S : Soup .
vars .. ... .... ..... ...... ....... : Set .
vars N : Nat .
vars DeviceX : Device .
vars KeyA : Qid .
vars UserY : User .
vars UserX : User .
vars SetA : Set .
vars DeviceY : Device .
vars KeyB : Qid .
vars AnyPrincipal : Principal .
*** events type declaration
ops ev1 : User Device -> Event .
ops ev2 : User Device Qid -> Event .
ops ev3 : Principal Qid Qid -> Event .
ops ev4 : User Device -> Event .
ops ev5 : User Device -> Event .
*** events
eq ev1(UserY, DeviceX) = $ UserY 'pressButton' DeviceX .
eq ev2(UserY, DeviceX, KeyB) = $ UserY 'callAPI:bind' DeviceX | (KeyB) .
eq ev3(AnyPrincipal, KeyA, KeyB) = $ AnyPrincipal 'callAPI:bind' cloudA | (KeyA ; KeyB) .
eq ev4(UserX, DeviceY) = $ UserX 'leaves' DeviceY .
eq ev5(UserX, DeviceY) = $ UserX 'approaches' DeviceY .
*** transitions
rl [rev1]: E @ S < UserY | ('localTo' : DeviceX , ..) > 
=> ep: ev1(UserY, DeviceX) @ S < UserY | ('localTo' : DeviceX , ..) > .
rl [rev2]: E @ S < UserY | ('localTo' : DeviceX , 'keys' : (KeyB) , ..) > 
=> ep: ev2(UserY, DeviceX, KeyB) @ S < UserY | ('localTo' : DeviceX , 'keys' : (KeyB) , ..) > .
rl [rev3]: E @ S < UserY | ('keys' : (KeyA , KeyB , ..) , ...) > 
=> ep: ev3(UserY, KeyA, KeyB) @ S < UserY | ('keys' : (KeyA , KeyB , ..) , ...) > .
rl [rev4]: E @ S < UserX | ('localTo' : DeviceY , ..) > 
=> ep: ev4(UserX, DeviceY) @ S < UserX | ('localTo' : DeviceY , ..) > .
rl [rev5]: E @ S < UserX | ('localTo' : nils , ..) > < DeviceY | ... > 
=> ep: ev5(UserX, DeviceY) @ S < UserX | ('localTo' : nils , ..) > < DeviceY | ... > .

endm
