[init]
Initially, the userA is local to the deviceB and has no key; The userC is not local and has no key; The cloud records that deviceB's key is 'secret' and the owner is empty; The deviceB has key 'secret'.

[state changes]
When any user presses the button on any device and the device has some key, then the device send its key to the user and become online.
When any device sends any user a key and the user has no key, the user will know the key.
When the cloud records that the device has any key and the device is online, the user calls 'callAPI:bind' with the device and the same key as arguments to the cloud, then the cloud will add the user to the device's owner.
When a user call the cloud API 'callAPI:reset' if the cloud records that the user is the device's owner and the device is online, the cloud will reset the device owner to empty and the device become offline.
When any user is not local to any device and the user approaches the device, the user will be local to the device.
When any user is local to any device and the user leaves any device, the user will be remote to the device.

[events]
If any user is local to any device, the user can press the device button.
If any user has some key, the user can use the key to call the cloud API 'callAPI:bind'.
At any time, a user can call the cloud API 'callAPI:reset' with the target device as an argument.
When any user is local to any device, the user can leave the device. 
When any user is not local to any device, the user can approach the deviceB.

[properties]
The userA will first press the button, then call cloud's API 'callApi:Bind'.
If the cloud records that userA is the owner of deviceB, userA will not take any operations in the next state.
In the meantime, the userC can perform any operations between or after the userA.
Eventually, there is a state that userC is not local to deviceB and is not the owner of deviceB, and the next time userC is not local and is the owner of deviceB.
