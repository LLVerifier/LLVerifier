[init]
Initially, the userA is local to the deviceB and has no message; The userC is not local and has no message; The cloud records that deviceB's key is 'secret' and the owner is empty; The deviceB has key 'secret'.

[state changes]
When a user is not local to any device and approaches one, they become local to that device.
When any user is local to any device and the user leaves any device, the user will be remote to the device.
When a user presses the button on any device and the device has a key, the device will use its key to encrypt a fresh random string as a message and send it to the user.
When a device sends any message to a user and the user has no messages, the user will know the message.
When the cloud records that the device has any key, the user calls 'callAPI:bind' with a message that encrypts any random string with the same key, then the cloud will add the user to the device's owner.
When a user calls the cloud API 'callAPI:reset' and the cloud records that the user is the device's owner, the cloud will reset the device owner to empty.


[events]
If any user is local to any device, the user can press the device button.
If any user know some message, the user can use the message to call the cloud API 'callAPI:bind'.
At any time, a user can call the cloud API 'callAPI:reset' with the target device as an argument.
When a user is local to a device, they can leave it.
When a user is not local to any device, they can approach deviceB.

[properties]
The userA will first press the button, then call cloud's API 'callApi:Bind' until reset.
If the cloud records that userA is the owner of deviceB, userA will not take any operations in the next state.
If in the next state, userA reset the deviceB, the userA calls 'callAPI:bind' and is not the owner of deviceB.
If reset happens, the userA will eventually press the button of deviceB.
In the meantime, the userC can perform any operations between or after the userA.
Eventually, there is a state that userC is not local to deviceB and is not the owner of deviceB, and the next time userC is not local and is the owner of deviceB.
