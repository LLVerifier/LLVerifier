Initially, userA is local to deviceB and has no key, while userC is not local and also has no key. The cloudA records that deviceB's key is 'secret' and the owner is empty. DeviceB has the key 'secret'. When a user is not local to any device and approaches a device, the user becomes local to the device. Conversely, when a local user leaves a device, the user becomes remote to the device. If a user presses the button on a device and the device has a key, the device sends its key to the user. If a device sends a user a key and the user has no key, the user will learn the key. When the cloudA records that a device has a key and the user calls 'callAPI:bind' with the device and the same key as arguments to cloudA, the cloudA will add the user as the device's owner.

If a user is local to a device, the user can press the device button. If a user has a key, whether local or remote, the user can use the key to call cloudA's API 'callAPI:bind'. When a user is local to a device, the user can leave the device. When a user is not local to any device, the user can approach deviceB.

[properties]
The userA will first press the button, then call cloud's API 'callApi:Bind'.
If the cloud records that userA is the owner of deviceB, userA will always not take any operations in the next state.
In the meantime, the userC can perform any operations between or after the userA.
Eventually, there is a state that userC is not local to deviceB and is not the owner of deviceB, and the next time userC is not local and is the owner of deviceB.
