Initially, userA is local to deviceB and has no message, while userC is not local and also has no message. The cloud records that deviceB's key is 'secret' and the owner is empty, and deviceB has the key 'secret'. When a user who is not local to any device approaches one, they become local to that device. Conversely, when any user who is local to a device leaves, they become remote to the device. If a user presses the button on a device that has a key, the device uses its key to encrypt a fresh random string as a message and sends it to the user. If a device sends a message to a user who has no messages, the user will know the message. When the cloud records that the device has a key, and the user calls 'callAPI:bind' with a message that encrypts a random string using the same key, the cloud adds the user to the device's owner. If a user calls the cloud API 'callAPI:reset', and the cloud records that the user is the device's owner, the cloud will reset the device owner to empty. If any user is local to a device, they can press the device button. If a user knows a message, they can use it to call the cloud API 'callAPI:bind'. At any time, a user can call the cloud API 'callAPI:reset' with the target device as an argument. When a user is local to a device, they can leave it, and when a user is not local to any device, they can approach deviceB.

[properties]
The userA will first press the button, then call cloud's API 'callApi:Bind' until reset.
If the cloud records that userA is the owner of deviceB, userA will not take any operations in the next state.
If in the next state, userA reset the deviceB, the userA calls 'callAPI:bind' and is not the owner of deviceB.
If reset happens, the userA will eventually press the button of deviceB.
In the meantime, the userC can perform any operations between or after the userA.
Eventually, there is a state that userC is not local to deviceB and is not the owner of deviceB, and the next time userC is not local and is the owner of deviceB.
