Initially, userA is local to deviceB and has no key, while userC is not local and also has no key. The cloud records that userA's devices and members are empty, userC's devices and members are empty, and the owner of deviceB is empty. DeviceB has a key labeled 'secret' and is unlocked.

When any user who is not local to a device approaches it, they become local to that device. Conversely, when any user is local to a device and then leaves, they become remote to that device. If any user presses the button on a device that has a key, the device updates its key with a fresh random string. When a device is unlocked and a user without keys calls the API 'callAPI:getKey', the user updates their knowledge with the device's key. If a device with a key is unlocked and a user calls the API 'callAPI:lock' with the same key, the device becomes locked.

When the cloudA has recorded a user and the user calls the API 'callAPI:invite' with another user as an argument, the cloud adds the invited user to the member list. If the cloudA records that a user has a member and that user calls 'callAPI:kick' with the member as an argument, the cloud removes the member from the list. When the cloudA records that a device has a key, a user has a member, and the member calls 'cloudAPI:getKey' with the device as an argument, the member updates their knowledge with the new key. If a device has a key and a user calls API 'callAPI:bind' with the device and the same key as arguments, the cloudA adds the user as the device's owner.

If any user is local to any device, they can press the device button or call the deviceB's API 'callAPI:getKey'. If a user has a key and is local to a device, they can call deviceB's API 'callAPI:lock' with the key. Users with a key can call the cloud API 'callAPI:bind' using the key at any time. UserC can call the cloud API 'callAPI:invite' or 'callAPI:kick' with userA as an argument at any time. When a user is local to a device, they can leave the device. When a user is not local to a device, they can approach deviceB.

[properties]
The userA will first press the button, call deviceB's API 'callAPI:getKey', then call cloud's API 'callApi:Bind' sequencely.
If the cloud records that userA is the owner of deviceB, userA will not perform any operations in the next state.
In the meantime, the userC can perform any operations between or after the userA.
Eventually, there is a state that userC is not local to deviceB and is not the owner of deviceB, and the next time userC is not local and is the owner of deviceB.
